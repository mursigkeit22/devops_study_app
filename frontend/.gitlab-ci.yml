include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - local: 'yml_configs/.ssh-before-script.yml'
  - template: Security/SAST.gitlab-ci.yml
  - local: 'yml_configs/.frontend-test.yml'
 
stages:
   - build
   - test
   - release
   - deploy

build-frontend-code-job:
  stage: build 
  image: docker:20.10.12-dind-rootless 
  rules:
    - changes:
      - frontend/**/*
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - docker build --tag $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA

upload-frontend-latest:
  stage: release
  image: docker:20.10.12-dind-rootless
  rules:
    - changes:
      - frontend/**/*
  variables:
    GIT_STRATEGY: none
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/sausage-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:latest

deploy-frontend:
  stage: deploy
  image: alpine:3.15.0
  rules:
    - changes:
      - frontend/**/*
      when: manual
  extends:
    - .ssh-before-script
  script:
    - scp docker-compose.yml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/docker-compose.yml  
    - ssh ${DEV_USER}@${DEV_HOST} "export "CI_REGISTRY_USER=${CI_REGISTRY_USER}"; export "CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}"; export "CI_REGISTRY=${CI_REGISTRY}"; export "CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE}"; setsid /bin/bash -s " < ./frontend/deploy-frontend.sh  





