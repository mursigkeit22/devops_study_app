cache:
  key: backend
  paths:
    - backend/target

variables:
  JAVA_OPTS: -XX:MaxRAMPercentage=90
include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  # - template: Security/SAST.gitlab-ci.yml
  # - local: 'yml_configs/.backend-test.yml'
  - local: 'yml_configs/.ssh-before-script.yml'
 
stages:
  - build
  # - test
  - release
  - secrets
  - deploy

build-backend-code-job:
  stage: build  
  image: docker:20.10.12-dind-rootless
  rules:
    - changes:
      - backend/**/*
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --build-arg REPORTGENERATOR_PATH=$REPORTGENERATOR_PATH
      --tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
      .
      
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
    

upload-backend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  rules:
    - changes:
      - backend/**/*
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/sausage-backend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:latest


secrets-backend:
  stage: secrets
  image: vault:1.11.3
  rules:
    - changes:
      - backend/**/*
  script:
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=sausage-store jwt=$CI_JOB_JWT)"
    - echo "PSQL_USER=$(vault kv get -field=PSQL_USER -mount=secret sausage-store)" >> backend.env
    - echo "PSQL_PASSWORD=$(vault kv get -field=PSQL_PASSWORD -mount=secret sausage-store)" >> backend.env
    - echo "PSQL_HOST=$(vault kv get -field=PSQL_HOST -mount=secret sausage-store)" >> backend.env
    - echo "PSQL_PORT=$(vault kv get -field=PSQL_PORT -mount=secret sausage-store)" >> backend.env
    - echo "PSQL_DBNAME=$(vault kv get -field=PSQL_DBNAME -mount=secret sausage-store)" >> backend.env
        
  artifacts:
    reports:
      dotenv: backend.env

deploy-backend:
  stage: deploy
  image: docker:20.10.12-dind
  extends:
    - .ssh-before-script
  rules:
    - changes:
      - backend/**/*
      when: manual
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker context create remote --docker "host=ssh://${DEV_USER}@${DEV_HOST}"
    - docker context use remote
    - docker-compose --context remote stop backend
    - docker-compose --context remote rm -f backend
    - docker-compose --context remote pull backend
    - docker-compose --context remote up -d backend


   

  
  


