cache:
    key: backend
    paths:
      - backend/target

variables:
  JAVA_OPTS: -XX:MaxRAMPercentage=90
include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  # - template: Security/SAST.gitlab-ci.yml
  # - local: 'yml_configs/.backend-test.yml'
  - local: 'yml_configs/.ssh-before-script.yml'
 
stages:
  - build
  # - test
  - release
  - deploy

build-backend-code-job:
  stage: build  
  image: docker:20.10.12-dind-rootless
  rules:
    - changes:
      - backend/**/*
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
      .
      
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
    

upload-backend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  rules:
    - changes:
      - backend/**/*
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/sausage-backend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:latest
  

deploy-backend:
  stage: deploy
  image: vault:1.11.3
  rules:
    - changes:
      - backend/**/*
      when: manual
  extends:
    - .ssh-before-script
  script:
    - scp docker-compose.yml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/docker-compose.yml
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=sausage-store jwt=$CI_JOB_JWT)"
      
    - ssh ${DEV_USER}@${DEV_HOST} 
        "export "PSQL_USER=$(vault kv get -field=PSQL_USER -mount=secret sausage-store)"; 
         export "PSQL_PASSWORD=$(vault kv get -field=PSQL_PASSWORD -mount=secret sausage-store)"; 
         export "PSQL_HOST=$(vault kv get -field=PSQL_HOST -mount=secret sausage-store)";
         export "PSQL_PORT=$(vault kv get -field=PSQL_PORT -mount=secret sausage-store)";
         export "PSQL_DBNAME=$(vault kv get -field=PSQL_DBNAME -mount=secret sausage-store)"; 
         export "VERSION=${VERSION}"; 
         export "CI_REGISTRY_USER=${CI_REGISTRY_USER}"; 
         export "CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}"; 
         export "CI_REGISTRY=${CI_REGISTRY}"; 
         export "CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE}"; 
         setsid /bin/bash -s" < ./backend/deploy-backend.sh
    

  
  


